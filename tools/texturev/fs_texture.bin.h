static const uint8_t fs_texture_glsl[2334] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x75, // FSH............u
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // _params0........
	0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x02, 0x01, 0x00, 0x00, // ...u_params1....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, // .......s_texColo
	0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0x08, 0x00, 0x00, 0x76, // r..............v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, // arying vec4 v_co
	0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, // lor0;.varying ve
	0x63, 0x33, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, // c3 v_texcoord0;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x70, // uniform vec4 u_p
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // arams0;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x3b, 0x0a, // vec4 u_params1;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x6f, // D s_texColor;.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, // id main ().{.  v
	0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, // ec4 color_1;.  v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, // ec4 tmpvar_2;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // tmpvar_2 = textu
	0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, // re2DLod (s_texCo
	0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // lor, v_texcoord0
	0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x2e, 0x78, // .xy, u_params0.x
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x77, 0x20, 0x3d, // );.  color_1.w =
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x63, //  tmpvar_2.w;.  c
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x6d, 0x69, // olor_1.xyz = (mi
	0x78, 0x20, 0x28, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x73, // x (pow (.    abs
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x20, // (tmpvar_2.xyz). 
	0x20, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x32, 0x2e, 0x32, 0x2c, 0x20, 0x32, 0x2e, 0x32, //  , vec3(2.2, 2.2
	0x2c, 0x20, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // , 2.2)), tmpvar_
	0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, // 2.xyz, u_params0
	0x2e, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x75, 0x5f, 0x70, 0x61, 0x72, // .z) * exp2(u_par
	0x61, 0x6d, 0x73, 0x30, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // ams0.w));.  colo
	0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x2a, // r_1 = (color_1 *
	0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, //  v_color0);.  ve
	0x63, 0x33, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, // c3 outColor_3;. 
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, //  vec3 tmpvar_4;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x30, //   tmpvar_4.x = 0
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x79, // .0;.  tmpvar_4.y
	0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //  = 0.0;.  tmpvar
	0x5f, 0x34, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x6f, 0x75, // _4.z = 0.0;.  ou
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // tColor_3 = tmpva
	0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x70, 0x61, // r_4;.  if ((u_pa
	0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x20, // rams1.x < 0.5)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // {.    vec3 tmpva
	0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // r_5;.    tmpvar_
	0x35, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 5 = clamp (color
	0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // _1.xyz, 0.0, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // );.    vec3 _rgb
	0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x36, 0x20, 0x3d, // _6;.    _rgb_6 =
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, //  tmpvar_5;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, // loat tmpvar_7;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, //    if ((tmpvar_5
	0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, // .x <= 0.0031308)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ) {.      tmpvar
	0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, // _7 = (12.92 * tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // pvar_5.x);.    }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, //  else {.      tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, // pvar_7 = ((1.055
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, //  * pow (tmpvar_5
	0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x37, 0x29, 0x29, 0x20, // .x, 0.4166667)) 
	0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, // - 0.055);.    };
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x36, 0x2e, 0x78, 0x20, 0x3d, 0x20, // .    _rgb_6.x = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // tmpvar_7;.    fl
	0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, // oat tmpvar_8;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, //   if ((tmpvar_5.
	0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x29, // y <= 0.0031308))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //  {.      tmpvar_
	0x38, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, // 8 = (12.92 * tmp
	0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // var_5.y);.    } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // else {.      tmp
	0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, // var_8 = ((1.055 
	0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, // * pow (tmpvar_5.
	0x79, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x37, 0x29, 0x29, 0x20, 0x2d, // y, 0.4166667)) -
	0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, //  0.055);.    };.
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x36, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x74, //     _rgb_6.y = t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // mpvar_8;.    flo
	0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // at tmpvar_9;.   
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, //  if ((tmpvar_5.z
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x29, 0x20, //  <= 0.0031308)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, // {.      tmpvar_9
	0x20, 0x3d, 0x20, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, //  = (12.92 * tmpv
	0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // ar_5.z);.    } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // lse {.      tmpv
	0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, // ar_9 = ((1.055 *
	0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, //  pow (tmpvar_5.z
	0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x37, 0x29, 0x29, 0x20, 0x2d, 0x20, // , 0.4166667)) - 
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // 0.055);.    };. 
	0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x36, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x6d, //    _rgb_6.z = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x43, // pvar_9;.    outC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x36, 0x3b, // olor_3 = _rgb_6;
	0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // .  } else {.    
	0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, // if ((u_params1.x
	0x20, 0x3c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  < 1.5)) {.     
	0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x63, 0x6f, //  outColor_3 = co
	0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // lor_1.xyz;.    }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //  else {.      if
	0x20, 0x28, 0x28, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, 0x3c, //  ((u_params1.x <
	0x20, 0x32, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  2.5)) {.       
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x30, 0x3b, //  vec3 _color_10;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .        _color_
	0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x37, 0x31, // 10 = ((mat3(1.71
	0x36, 0x36, 0x35, 0x31, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x35, 0x35, 0x36, 0x37, 0x30, 0x38, // 6651, -0.3556708
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x35, 0x33, 0x33, 0x36, 0x36, 0x33, 0x2c, 0x20, 0x2d, 0x30, // , -0.2533663, -0
	0x2e, 0x36, 0x36, 0x36, 0x36, 0x38, 0x34, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x31, 0x36, 0x34, // .6666844, 1.6164
	0x38, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x35, 0x37, 0x36, 0x38, 0x35, 0x2c, 0x20, 0x30, // 81, 0.0157685, 0
	0x2e, 0x30, 0x31, 0x37, 0x36, 0x33, 0x39, 0x39, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x32, // .0176399, -0.042
	0x37, 0x37, 0x30, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x34, 0x32, 0x31, 0x30, 0x33, 0x31, 0x29, // 7706, 0.9421031)
	0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x35, 0x35, //  * (mat3(0.41255
	0x36, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, // 64, 0.3575761, 0
	0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, // .1804375, 0.2126
	0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, // 729, 0.7151522, 
	0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, // 0.072175, 0.0193
	0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x2c, 0x20, 0x30, // 339, 0.119192, 0
	0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // .9503041) * colo
	0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x70, 0x61, // r_1.xyz)) * u_pa
	0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // rams1.y);.      
	0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, //   vec3 tmpvar_11
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ;.        tmpvar
	0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x28, 0x5f, 0x63, 0x6f, 0x6c, // _11 = pow ((_col
	0x6f, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x31, 0x29, 0x2c, // or_10 * 0.0001),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x35, 0x39, 0x33, 0x30, 0x31, 0x38, 0x2c, //  vec3(0.1593018,
	0x20, 0x30, 0x2e, 0x31, 0x35, 0x39, 0x33, 0x30, 0x31, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, //  0.1593018, 0.15
	0x39, 0x33, 0x30, 0x31, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 93018));.       
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, //  vec3 tmpvar_12;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // .        tmpvar_
	0x31, 0x32, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x28, 0x28, 0x30, 0x2e, 0x38, 0x33, // 12 = pow (((0.83
	0x35, 0x39, 0x33, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 59375 + .       
	0x20, 0x20, 0x20, 0x28, 0x31, 0x38, 0x2e, 0x38, 0x35, 0x31, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x74, //    (18.85156 * t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_11).      
	0x20, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, //   ) / (vec3(1.0,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, //  1.0, 1.0) + .  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x31, 0x38, 0x2e, 0x36, 0x38, 0x37, 0x35, //         (18.6875
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x29, 0x0a, 0x20, 0x20, //  * tmpvar_11).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x37, //       )), vec3(7
	0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, // 8.84375, 78.8437
	0x35, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 5, 78.84375));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x30, //        _color_10
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, //  = tmpvar_12;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x33, //       outColor_3
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, //  = tmpvar_12;.  
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, //     };.    };.  
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // };.  vec4 tmpvar
	0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, // _13;.  tmpvar_13
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .xyz = outColor_
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x77, // 3;.  tmpvar_13.w
	0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, //  = color_1.w;.  
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, // gl_FragColor = t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,             // mpvar_13;.}...
};
static const uint8_t fs_texture_essl[2478] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x75, // FSH............u
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // _params0........
	0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x02, 0x01, 0x00, 0x00, // ...u_params1....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, // .......s_texColo
	0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x09, 0x00, 0x00, 0x76, // r..........^...v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, // arying highp vec
	0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, // 4 v_color0;.vary
	0x69, 0x6e, 0x67, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ing highp vec3 v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _texcoord0;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // orm highp vec4 u
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // _params0;.unifor
	0x6d, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x70, // m highp vec4 u_p
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // arams1;.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, // sampler2D s_texC
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, // olor;.void main 
	0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, // ().{.  lowp vec4
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, //  color_1;.  lowp
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, //  vec4 tmpvar_2;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, //   tmpvar_2 = tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x28, 0x73, 0x5f, // ture2DLod    (s_
	0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // texColor, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, // oord0.xy, u_para
	0x6d, 0x73, 0x30, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // ms0.x);.  color_
	0x31, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x77, // 1.w = tmpvar_2.w
	0x3b, 0x0a, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, // ;.  color_1.xyz 
	0x3d, 0x20, 0x28, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, // = (mix (pow (.  
	0x20, 0x20, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x78, //   abs(tmpvar_2.x
	0x79, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x32, 0x2e, 0x32, // yz).  , vec3(2.2
	0x2c, 0x20, 0x32, 0x2e, 0x32, 0x2c, 0x20, 0x32, 0x2e, 0x32, 0x29, 0x29, 0x2c, 0x20, 0x74, 0x6d, // , 2.2, 2.2)), tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x75, 0x5f, 0x70, 0x61, // pvar_2.xyz, u_pa
	0x72, 0x61, 0x6d, 0x73, 0x30, 0x2e, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, // rams0.z) * exp2(
	0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, // u_params0.w));. 
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, //  color_1 = (colo
	0x72, 0x5f, 0x31, 0x20, 0x2a, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x29, 0x3b, // r_1 * v_color0);
	0x0a, 0x20, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // .  mediump vec4 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, // tmpvar_3;.  lowp
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, //  vec3 outColor_4
	0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, // ;.  lowp vec3 tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // pvar_5;.  tmpvar
	0x5f, 0x35, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, // _5.x = 0.0;.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, // pvar_5.y = 0.0;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x30, //   tmpvar_5.z = 0
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, // .0;.  outColor_4
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x69, //  = tmpvar_5;.  i
	0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, // f ((u_params1.x 
	0x3c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, // < 0.5)) {.    lo
	0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, // wp vec3 tmpvar_6
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, // ;.    tmpvar_6 =
	0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, //  clamp (color_1.
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // xyz, 0.0, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, //     lowp vec3 _r
	0x67, 0x62, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x37, // gb_7;.    _rgb_7
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  = tmpvar_6;.   
	0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, //  lowp float tmpv
	0x61, 0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, // ar_8;.    if ((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // mpvar_6.x <= 0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 031308)) {.     
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x32, 0x2e, //  tmpvar_8 = (12.
	0x39, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x29, // 92 * tmpvar_6.x)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, // ;.    } else {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20, //      tmpvar_8 = 
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x74, // ((1.055 * pow (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, // mpvar_6.x, 0.416
	0x36, 0x36, 0x36, 0x37, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x3b, // 6667)) - 0.055);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, // .    };.    _rgb
	0x5f, 0x37, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x3b, // _7.x = tmpvar_8;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // .    lowp float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // tmpvar_9;.    if
	0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x79, 0x20, 0x3c, 0x3d, //  ((tmpvar_6.y <=
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, //  0.0031308)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, //      tmpvar_9 = 
	0x28, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // (12.92 * tmpvar_
	0x36, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // 6.y);.    } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //  {.      tmpvar_
	0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, // 9 = ((1.055 * po
	0x77, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x79, 0x2c, 0x20, 0x30, // w (tmpvar_6.y, 0
	0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x37, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // .4166667)) - 0.0
	0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 55);.    };.    
	0x5f, 0x72, 0x67, 0x62, 0x5f, 0x37, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // _rgb_7.y = tmpva
	0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x66, 0x6c, // r_9;.    lowp fl
	0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, // oat tmpvar_10;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, //    if ((tmpvar_6
	0x2e, 0x7a, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, // .z <= 0.0031308)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ) {.      tmpvar
	0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x74, // _10 = (12.92 * t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // mpvar_6.z);.    
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // } else {.      t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, // mpvar_10 = ((1.0
	0x35, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // 55 * pow (tmpvar
	0x5f, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x37, 0x29, // _6.z, 0.4166667)
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) - 0.055);.    
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x5f, 0x37, 0x2e, 0x7a, 0x20, // };.    _rgb_7.z 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // = tmpvar_10;.   
	0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x72, //  outColor_4 = _r
	0x67, 0x62, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, // gb_7;.  } else {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, // .    if ((u_para
	0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x7b, 0x0a, // ms1.x < 1.5)) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, //       outColor_4
	0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, //  = color_1.xyz;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //     } else {.   
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, //    if ((u_params
	0x31, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x32, 0x2e, 0x35, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 1.x < 2.5)) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //       lowp vec3 
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // _color_11;.     
	0x20, 0x20, 0x20, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, //    _color_11 = (
	0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x37, 0x31, 0x36, 0x36, 0x35, 0x31, 0x2c, 0x20, // (mat3(1.716651, 
	0x2d, 0x30, 0x2e, 0x33, 0x35, 0x35, 0x36, 0x37, 0x30, 0x38, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, // -0.3556708, -0.2
	0x35, 0x33, 0x33, 0x36, 0x36, 0x33, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x36, 0x36, 0x36, 0x38, // 533663, -0.66668
	0x34, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x31, 0x36, 0x34, 0x38, 0x31, 0x2c, 0x20, 0x30, 0x2e, // 44, 1.616481, 0.
	0x30, 0x31, 0x35, 0x37, 0x36, 0x38, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x37, 0x36, 0x33, // 0157685, 0.01763
	0x39, 0x39, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x32, 0x37, 0x37, 0x30, 0x36, 0x2c, 0x20, // 99, -0.0427706, 
	0x30, 0x2e, 0x39, 0x34, 0x32, 0x31, 0x30, 0x33, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x6d, 0x61, // 0.9421031) * (ma
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x35, 0x35, 0x36, 0x34, 0x2c, 0x20, 0x30, 0x2e, // t3(0.4125564, 0.
	0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, // 3575761, 0.18043
	0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, // 75, 0.2126729, 0
	0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, // .7151522, 0.0721
	0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, // 75, 0.0193339, 0
	0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, // .119192, 0.95030
	0x34, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, // 41) * color_1.xy
	0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, // z)) * u_params1.
	0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, // y);.        lowp
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, //  vec3 tmpvar_12;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // .        tmpvar_
	0x31, 0x32, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x28, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // 12 = pow ((_colo
	0x72, 0x5f, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x31, 0x29, 0x2c, 0x20, // r_11 * 0.0001), 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x35, 0x39, 0x33, 0x30, 0x31, 0x38, 0x2c, 0x20, // vec3(0.1593018, 
	0x30, 0x2e, 0x31, 0x35, 0x39, 0x33, 0x30, 0x31, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x39, // 0.1593018, 0.159
	0x33, 0x30, 0x31, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3018));.        
	0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // lowp vec3 tmpvar
	0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // _13;.        tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x28, 0x28, // var_13 = pow (((
	0x30, 0x2e, 0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x0a, 0x20, 0x20, 0x20, // 0.8359375 + .   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x31, 0x38, 0x2e, 0x38, 0x35, 0x31, 0x35, 0x36, //        (18.85156
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, 0x0a, 0x20, 0x20, //  * tmpvar_12).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, //       ) / (vec3(
	0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2b, // 1.0, 1.0, 1.0) +
	0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x31, 0x38, 0x2e, //  .          (18.
	0x36, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, // 6875 * tmpvar_12
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x65, // ).        )), ve
	0x63, 0x33, 0x28, 0x37, 0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x37, 0x38, 0x2e, // c3(78.84375, 78.
	0x38, 0x34, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, // 84375, 78.84375)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // );.        _colo
	0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, // r_11 = tmpvar_13
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, // ;.        outCol
	0x6f, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, // or_4 = tmpvar_13
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // ;.      };.    }
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, // ;.  };.  lowp ve
	0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, // c4 tmpvar_14;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, // tmpvar_14.xyz = 
	0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, // outColor_4;.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // pvar_14.w = colo
	0x72, 0x5f, 0x31, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // r_1.w;.  tmpvar_
	0x33, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, // 3 = tmpvar_14;. 
	0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, //  gl_FragColor = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,             // tmpvar_3;.}...
};
static const uint8_t fs_texture_spv[4403] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x75, // FSH............u
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // _params0........
	0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x12, 0x01, 0x10, 0x00, // ...u_params1....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, // .......s_texColo
	0x72, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x00, 0xe0, 0x10, 0x00, 0x00, 0x03, // r0......."......
	0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08, 0x00, 0xc3, 0x02, 0x00, 0x00, 0x00, // .#..............
	0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30, 0x00, // ...GLSL.std.450.
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, // ................
	0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, // ...........main.
	0x00, 0x00, 0x00, 0x67, 0x01, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x10, // ...g...k...x....
	0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, // ...............m
	0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x73, // ain........M...s
	0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _texColorSampler
	0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x50, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, // .......P...s_tex
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, // ColorTexture....
	0x00, 0x06, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, // ...}...UniformBl
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x00, // ock........}....
	0x00, 0x00, 0x00, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x00, 0x00, 0x00, 0x06, // ...u_params0....
	0x00, 0x06, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x75, 0x5f, 0x70, 0x61, 0x72, // ...}.......u_par
	0x61, 0x6d, 0x73, 0x31, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, // ams1............
	0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x67, 0x01, 0x00, 0x00, 0x76, 0x5f, 0x63, 0x6f, 0x6c, // .......g...v_col
	0x6f, 0x72, 0x30, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x76, // or0........k...v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, 0x06, 0x00, 0x78, // _texcoord0.....x
	0x01, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ...bgfx_FragData
	0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // 0..G...M..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x12, // ...G...M...!....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, // ...G...P..."....
	0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x50, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, // ...G...P...!....
	0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, // ...H...}.......#
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x01, // .......H...}....
	0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x7d, // ...#.......G...}
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x22, // .......G......."
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x21, // .......G.......!
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x67, 0x01, 0x00, 0x00, 0x1e, // .......G...g....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x1e, // .......G...k....
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x78, 0x01, 0x00, 0x00, 0x1e, // .......G...x....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, // ...............!
	0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, // ................
	0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, // ........... ....
	0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, // ................
	0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, // ... ...L........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, // ...;...L...M....
	0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // ... ...O........
	0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, // ...;...O...P....
	0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, // .......S... ....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x01, // ...+...S...T....
	0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x53, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, // ...+...S...X....
	0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, 0x1e, // .......s......@.
	0x00, 0x04, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x20, // ...}........... 
	0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x3b, // ...~.......}...;
	0x00, 0x04, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, // ...~............
	0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, // ....... .......+
	0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, // ............... 
	0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, // ..............@+
	0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x14, // .............M;.
	0x00, 0x02, 0x00, 0x96, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, // .......+........
	0x00, 0x00, 0x00, 0x52, 0xb8, 0x4e, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, // ...R.NA+........
	0x00, 0x00, 0x00, 0x3d, 0x0a, 0x87, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa1, // ...=..?+........
	0x00, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, // ...UU.>+........
	0x00, 0x00, 0x00, 0xae, 0x47, 0x61, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0xa9, // ....Ga=+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0xaf, // .......+........
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x15, // ................
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbf, // .......+........
	0x00, 0x00, 0x00, 0x98, 0x3a, 0xd3, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc0, // ....:.>+........
	0x00, 0x00, 0x00, 0x37, 0x14, 0xb7, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc1, // ...7..>+........
	0x00, 0x00, 0x00, 0x9c, 0xc4, 0x38, 0x3e, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xc2, // .....8>,........
	0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xed, 0xc6, 0x59, 0x3e, 0x2b, // .............Y>+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x37, 0x14, 0x37, 0x3f, 0x2b, // ...........7.7?+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x7d, 0xd0, 0x93, 0x3d, 0x2c, // ...........}..=,
	0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xc4, // ................
	0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc7, // .......+........
	0x00, 0x00, 0x00, 0x21, 0x62, 0x9e, 0x3c, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc8, // ...!b.<+........
	0x00, 0x00, 0x00, 0xef, 0x1a, 0xf4, 0x3d, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc9, // ......=+........
	0x00, 0x00, 0x00, 0x21, 0x47, 0x73, 0x3f, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xca, // ...!Gs?,........
	0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x00, 0x06, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0xc6, // ................
	0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd2, // .......+........
	0x00, 0x00, 0x00, 0x3a, 0xbb, 0xdb, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd3, // ...:..?+........
	0x00, 0x00, 0x00, 0x7c, 0x1a, 0xb6, 0xbe, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd4, // ...|...+........
	0x00, 0x00, 0x00, 0x3a, 0xb9, 0x81, 0xbe, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xd5, // ...:...,........
	0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x2b, // ...............+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0xd4, 0xab, 0x2a, 0xbf, 0x2b, // .............*.+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 0xdb, 0xe8, 0xce, 0x3f, 0x2b, // ..............?+
	0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xf1, 0x2c, 0x81, 0x3c, 0x2c, // ............,.<,
	0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x00, 0xd7, // ................
	0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xda, // .......+........
	0x00, 0x00, 0x00, 0x8d, 0x81, 0x90, 0x3c, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdb, // ......<+........
	0x00, 0x00, 0x00, 0x3a, 0x30, 0x2f, 0xbd, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdc, // ...:0/.+........
	0x00, 0x00, 0x00, 0xab, 0x2d, 0x71, 0x3f, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xdd, // ....-q?,........
	0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x00, 0x06, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0xd9, // ................
	0x00, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe5, // .......+........
	0x00, 0x00, 0x00, 0x00, 0x20, 0x23, 0x3e, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe7, // .... #>+........
	0x00, 0x00, 0x00, 0x00, 0xb0, 0x9d, 0x42, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe9, // ......B+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xeb, // .....V?+........
	0x00, 0x00, 0x00, 0x00, 0xd0, 0x96, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xed, // ......A+........
	0x00, 0x00, 0x00, 0x00, 0x80, 0x95, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf0, // ......A+........
	0x00, 0x00, 0x00, 0x17, 0xb7, 0xd1, 0x38, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfc, // ......8+........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, // ......?+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, // .......+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, // ......?+........
	0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x25, // ......?+.......%
	0x01, 0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x20, 0x00, 0x04, 0x00, 0x63, 0x01, 0x00, 0x00, 0x01, // ..... @ ...c....
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x63, 0x01, 0x00, 0x00, 0x67, // .......;...c...g
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6a, 0x01, 0x00, 0x00, 0x01, // ....... ...j....
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6a, 0x01, 0x00, 0x00, 0x6b, // .......;...j...k
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x77, 0x01, 0x00, 0x00, 0x03, // ....... ...w....
	0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x77, 0x01, 0x00, 0x00, 0x78, // .......;...w...x
	0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb3, // .......,........
	0x02, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x2c, // ...s...s...s...,
	0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x0c, // ................
	0x01, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb5, // .......,........
	0x02, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb6, 0x02, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 0xe9, // ................
	0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb7, // .......,........
	0x02, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x2c, // ...............,
	0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xe7, // ................
	0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, // .......6........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, // ................
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x4d, // ...=.......N...M
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x50, // ...=.......Q...P
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x67, // ...=.......h...g
	0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x6b, // ...=.......l...k
	0x01, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 0x6c, // ...O...........l
	0x01, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, // ...l...........A
	0x00, 0x06, 0x00, 0x82, 0x00, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x58, // ...............X
	0x00, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa4, // .......=........
	0x01, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x5c, 0x00, 0x00, 0x00, 0xc2, // .......V........
	0x01, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x0e, // ...Q...N...X....
	0x00, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xa7, // .......O........
	0x01, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xdd, // ................
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa7, 0x01, 0x00, 0x00, 0x0c, // ................
	0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0xdf, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // ................
	0x00, 0x00, 0x00, 0xdd, 0x01, 0x00, 0x00, 0xb3, 0x02, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x82, // ...........A....
	0x00, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x81, // ...........X....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00, 0xcf, // ...=............
	0x01, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x15, 0x00, 0x00, 0x00, 0xd1, 0x01, 0x00, 0x00, 0xd0, // ...P............
	0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x15, // ................
	0x00, 0x00, 0x00, 0xe9, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0xdf, // ................
	0x01, 0x00, 0x00, 0xa7, 0x01, 0x00, 0x00, 0xd1, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x82, // ...........A....
	0x00, 0x00, 0x00, 0xd5, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x8d, // ...........X....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd6, 0x01, 0x00, 0x00, 0xd5, // ...=............
	0x01, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd7, 0x01, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xd6, 0x01, 0x00, 0x00, 0x8e, // ................
	0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0xd8, 0x01, 0x00, 0x00, 0xe9, 0x01, 0x00, 0x00, 0xd7, // ................
	0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 0xd8, // ...Q............
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xa3, // .......R........
	0x02, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 0xc5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, // ...............Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xac, 0x01, 0x00, 0x00, 0xd8, 0x01, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xa5, 0x02, 0x00, 0x00, 0xac, // ...R............
	0x01, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0xae, 0x01, 0x00, 0x00, 0xd8, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x52, // ...............R
	0x00, 0x06, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xae, 0x01, 0x00, 0x00, 0xa5, // ................
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xb1, // ................
	0x01, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x82, // .......h...A....
	0x00, 0x00, 0x00, 0xb3, 0x01, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0xa9, // ...........T....
	0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0xb3, // ...=............
	0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x82, 0x00, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0x7f, // ...A............
	0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, // ...T.......=....
	0x00, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x96, // ................
	0x00, 0x00, 0x00, 0xf5, 0x01, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0xf7, // ................
	0x00, 0x03, 0x00, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xf5, // ................
	0x01, 0x00, 0x00, 0xf6, 0x01, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfd, // ................
	0x01, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x96, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0xb4, // ................
	0x01, 0x00, 0x00, 0x1d, 0x01, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x11, 0x02, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xff, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x03, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x03, 0x02, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0x96, // ................
	0x00, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0xf7, // ...........%....
	0x00, 0x03, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x05, // ................
	0x02, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x06, // ................
	0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0xb1, // ...O............
	0x01, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, // ................
	0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0x08, // ...........k....
	0x02, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x71, // ...............q
	0x02, 0x00, 0x00, 0x6b, 0x02, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x15, // ...k............
	0x00, 0x00, 0x00, 0x0e, 0x02, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 0x8e, // .......q........
	0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0x0e, 0x02, 0x00, 0x00, 0xf0, // .......~........
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x7e, 0x02, 0x00, 0x00, 0xb5, 0x02, 0x00, 0x00, 0x8e, // .......~........
	0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0xeb, // ................
	0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0xb6, // ................
	0x02, 0x00, 0x00, 0x85, 0x02, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x8b, // ................
	0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x15, // ................
	0x00, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x8b, 0x02, 0x00, 0x00, 0x88, // ................
	0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0x87, 0x02, 0x00, 0x00, 0x8c, // ................
	0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x8d, 0x02, 0x00, 0x00, 0xb8, 0x02, 0x00, 0x00, 0xf9, // ................
	0x00, 0x02, 0x00, 0x10, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x10, 0x02, 0x00, 0x00, 0xf5, // ................
	0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0xc1, 0x02, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 0x03, // ................
	0x02, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x11, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, // ...........O....
	0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x11, // ................
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x11, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, // ................
	0x00, 0x00, 0x00, 0xc0, 0x02, 0x00, 0x00, 0xc1, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x02, // ................
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x12, 0x02, 0x00, 0x00, 0xf8, // ................
	0x00, 0x02, 0x00, 0xf6, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xf8, // .......O........
	0x01, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // ................
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x15, 0x00, 0x00, 0x00, 0xfb, // ................
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0xb4, // .......+........
	0x02, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x24, // .......Q.......$
	0x02, 0x00, 0x00, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x40, // ...............@
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x34, // ...............4
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x34, 0x02, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x96, // .......4........
	0x00, 0x00, 0x00, 0x36, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, // ...6...$........
	0x00, 0x03, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x36, // ...?...........6
	0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3a, // ...7...:.......:
	0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 0x01, // ...........<....
	0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x85, // .......$........
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, 0x02, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x3c, // .......=.......<
	0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0x3d, // ...........>...=
	0x02, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x40, 0x02, 0x00, 0x00, 0xf8, // ...........@....
	0x00, 0x02, 0x00, 0x37, 0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x39, // ...7...........9
	0x02, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x40, // .......$.......@
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x3f, 0x02, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, // .......?........
	0x00, 0x02, 0x00, 0x40, 0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb9, // ...@............
	0x02, 0x00, 0x00, 0x3e, 0x02, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x39, 0x02, 0x00, 0x00, 0x37, // ...>...:...9...7
	0x02, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0xfb, // ...Q.......(....
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x52, 0x02, 0x00, 0x00, 0x00, // ...........R....
	0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0xf8, // ...........F....
	0x00, 0x02, 0x00, 0x46, 0x02, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x96, 0x00, 0x00, 0x00, 0x48, // ...F...........H
	0x02, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x51, // ...(...........Q
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x48, 0x02, 0x00, 0x00, 0x49, // ...........H...I
	0x02, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x0c, // ...L.......L....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, // .......N........
	0x00, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, // ...(............
	0x00, 0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x4e, 0x02, 0x00, 0x00, 0x83, // ...O.......N....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x4f, 0x02, 0x00, 0x00, 0xa4, // .......P...O....
	0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x52, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x49, // .......R.......I
	0x02, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x9a, // ...........K....
	0x00, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x52, 0x02, 0x00, 0x00, 0xf8, // ...(.......R....
	0x00, 0x02, 0x00, 0x51, 0x02, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x52, // ...Q...........R
	0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbb, 0x02, 0x00, 0x00, 0x50, // ...............P
	0x02, 0x00, 0x00, 0x4c, 0x02, 0x00, 0x00, 0x4b, 0x02, 0x00, 0x00, 0x49, 0x02, 0x00, 0x00, 0x51, // ...L...K...I...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00, 0xfb, 0x01, 0x00, 0x00, 0x02, // .......,........
	0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x64, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, // .......d........
	0x00, 0x03, 0x00, 0xa9, 0x00, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x58, // .......X.......X
	0x02, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x96, 0x00, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x2c, // ...........Z...,
	0x02, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x63, 0x02, 0x00, 0x00, 0x00, // ...........c....
	0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0x5e, // .......Z...[...^
	0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5e, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, // .......^........
	0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x2c, // ...`...........,
	0x02, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x61, // ...............a
	0x02, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, // .......`........
	0x00, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x61, 0x02, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xf9, // ...b...a........
	0x00, 0x02, 0x00, 0x64, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5b, 0x02, 0x00, 0x00, 0x85, // ...d.......[....
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x2c, // .......].......,
	0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x64, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x63, // .......d.......c
	0x02, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x64, 0x02, 0x00, 0x00, 0xf5, // ...........d....
	0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xbd, 0x02, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x5e, // ...........b...^
	0x02, 0x00, 0x00, 0x5d, 0x02, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x15, // ...]...[...P....
	0x00, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0xb9, 0x02, 0x00, 0x00, 0xbb, 0x02, 0x00, 0x00, 0xbd, // ................
	0x02, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x12, 0x02, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x12, // ................
	0x02, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x15, 0x00, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0xc0, // ................
	0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00, 0x51, // ...........d...Q
	0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 0x03, // ................
	0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0xbf, // ...Q............
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, // .......Q........
	0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, // ...........Q....
	0x00, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, // ...............P
	0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x17, // ................
	0x02, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x15, 0x02, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x78, // ...........>...x
	0x01, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, // ...........8....
	0x00, 0x20, 0x00,                                                                               // . .
};
static const uint8_t fs_texture_wgsl[4541] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0a, 0x75, // FSH............u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // _viewRect.......
	0x00, 0x00, 0x00, 0x0b, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x12, // ....u_viewTexel.
	0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // ..........u_view
	0x14, 0x01, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x69, 0x6e, 0x76, // .. ........u_inv
	0x56, 0x69, 0x65, 0x77, 0x14, 0x01, 0x60, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, // View..`........u
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0xa0, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // _proj...........
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0xe0, 0x00, 0x04, 0x00, 0x00, // u_invProj.......
	0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, // ....u_viewProj..
	0x20, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, //  ........u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x60, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ewProj..`.......
	0x07, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x14, 0x20, 0xa0, 0x01, 0x80, 0x00, 0x00, 0x00, // .u_model. ......
	0x00, 0x00, 0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x14, 0x01, // ...u_modelView..
	0xa0, 0x09, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // .........u_model
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0xe0, 0x09, 0x04, 0x00, 0x00, 0x00, // ViewProj........
	0x00, 0x00, 0x0b, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x12, 0x01, // ...u_alphaRef4..
	0x20, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, //  ........u_param
	0x73, 0x30, 0x12, 0x01, 0x30, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, // s0..0........u_p
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x12, 0x01, 0x40, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // arams1..@.......
	0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x02, 0x00, 0x00, // .s_texColor0....
	0x00, 0x00, 0x02, 0x22, 0x00, 0x70, 0x10, 0x00, 0x00, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, // ...".p...diagnos
	0x74, 0x69, 0x63, 0x28, 0x6f, 0x66, 0x66, 0x2c, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, // tic(off, derivat
	0x69, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x74, 0x79, 0x29, 0x3b, // ive_uniformity);
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, // .struct UniformB
	0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // lock {.    u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, // wRect: vec4<f32>
	0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, // ,.    u_viewTexe
	0x6c, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, // l: vec4<f32>,.  
	0x20, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x78, 0x34, //   u_view: mat4x4
	0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, // <f32>,.    u_inv
	0x56, 0x69, 0x65, 0x77, 0x3a, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x78, 0x34, 0x3c, 0x66, 0x33, 0x32, // View: mat4x4<f32
	0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3a, 0x20, 0x6d, // >,.    u_proj: m
	0x61, 0x74, 0x34, 0x78, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, // at4x4<f32>,.    
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3a, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x78, // u_invProj: mat4x
	0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x76, 0x69, // 4<f32>,.    u_vi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3a, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x78, 0x34, 0x3c, 0x66, // ewProj: mat4x4<f
	0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // 32>,.    u_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3a, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x78, 0x34, 0x3c, 0x66, // ewProj: mat4x4<f
	0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // 32>,.    u_model
	0x3a, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x6d, 0x61, 0x74, 0x34, 0x78, 0x34, 0x3c, 0x66, // : array<mat4x4<f
	0x33, 0x32, 0x3e, 0x2c, 0x20, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, // 32>, 32>,.    u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3a, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x78, // modelView: mat4x
	0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // 4<f32>,.    u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3a, 0x20, 0x6d, 0x61, 0x74, // delViewProj: mat
	0x34, 0x78, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, // 4x4<f32>,.    u_
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, // alphaRef4_: vec4
	0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, // <f32>,.    u_par
	0x61, 0x6d, 0x73, 0x30, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, // ams0_: vec4<f32>
	0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x5f, // ,.    u_params1_
	0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x2c, 0x0a, 0x7d, 0x0a, 0x0a, // : vec4<f32>,.}..
	0x40, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x28, 0x30, 0x29, 0x20, 0x40, 0x62, 0x69, 0x6e, 0x64, 0x69, // @group(0) @bindi
	0x6e, 0x67, 0x28, 0x31, 0x38, 0x29, 0x20, 0x0a, 0x76, 0x61, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, // ng(18) .var s_te
	0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3a, 0x20, 0x73, // xColorSampler: s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x40, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x28, 0x30, // ampler;.@group(0
	0x29, 0x20, 0x40, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x28, 0x32, 0x29, 0x20, 0x0a, 0x76, // ) @binding(2) .v
	0x61, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, // ar s_texColorTex
	0x74, 0x75, 0x72, 0x65, 0x3a, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x32, 0x64, // ture: texture_2d
	0x3c, 0x66, 0x33, 0x32, 0x3e, 0x3b, 0x0a, 0x40, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x28, 0x30, 0x29, // <f32>;.@group(0)
	0x20, 0x40, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x28, 0x31, 0x29, 0x20, 0x0a, 0x76, 0x61, //  @binding(1) .va
	0x72, 0x3c, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x3e, 0x20, 0x75, 0x6e, 0x6e, 0x61, 0x6d, // r<uniform> unnam
	0x65, 0x64, 0x3a, 0x20, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, // ed: UniformBlock
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x3c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3e, 0x20, 0x76, // ;.var<private> v
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x5f, 0x31, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, // _color0_1: vec4<
	0x66, 0x33, 0x32, 0x3e, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x3c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, // f32>;.var<privat
	0x65, 0x3e, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x5f, 0x31, // e> v_texcoord0_1
	0x3a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x3b, 0x0a, 0x76, 0x61, 0x72, // : vec3<f32>;.var
	0x3c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3e, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, // <private> bgfx_F
	0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, // ragData0_: vec4<
	0x66, 0x33, 0x32, 0x3e, 0x3b, 0x0a, 0x0a, 0x66, 0x6e, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x31, // f32>;..fn main_1
	0x28, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x70, 0x68, 0x69, // () {.    var phi
	0x5f, 0x36, 0x39, 0x32, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, // _692_: vec3<f32>
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, // ;.    var phi_69
	0x31, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x3b, 0x0a, 0x20, // 1_: vec3<f32>;. 
	0x20, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x34, 0x5f, 0x3a, //    var phi_684_:
	0x20, 0x66, 0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x70, 0x68, //  f32;.    var ph
	0x69, 0x5f, 0x36, 0x38, 0x36, 0x5f, 0x3a, 0x20, 0x66, 0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, // i_686_: f32;.   
	0x20, 0x76, 0x61, 0x72, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x38, 0x5f, 0x3a, 0x20, 0x66, //  var phi_688_: f
	0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x70, 0x68, 0x69, 0x5f, // 32;.    var phi_
	0x36, 0x39, 0x30, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x3b, // 690_: vec3<f32>;
	0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x36, 0x33, 0x20, 0x3d, // ..    let _e63 =
	0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  v_color0_1;.   
	0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x74, 0x65, //  let _e64 = v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, // xcoord0_1;.    l
	0x65, 0x74, 0x20, 0x5f, 0x65, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x75, 0x6e, 0x6e, 0x61, 0x6d, 0x65, // et _e68 = unname
	0x64, 0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x5f, 0x5b, 0x30, 0x75, 0x5d, // d.u_params0_[0u]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x36, 0x39, 0x20, 0x3d, // ;.    let _e69 =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, //  textureSampleLe
	0x76, 0x65, 0x6c, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, // vel(s_texColorTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, // xture, s_texColo
	0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x65, 0x36, 0x34, 0x2e, 0x78, // rSampler, _e64.x
	0x79, 0x2c, 0x20, 0x5f, 0x65, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, // y, _e68);.    le
	0x74, 0x20, 0x5f, 0x65, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x36, 0x39, 0x2e, 0x78, 0x79, // t _e70 = _e69.xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x37, 0x35, 0x20, // z;.    let _e75 
	0x3d, 0x20, 0x75, 0x6e, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, // = unnamed.u_para
	0x6d, 0x73, 0x30, 0x5f, 0x5b, 0x32, 0x75, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, // ms0_[2u];.    le
	0x74, 0x20, 0x5f, 0x65, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x75, 0x6e, 0x6e, 0x61, 0x6d, 0x65, 0x64, // t _e80 = unnamed
	0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x5f, 0x5b, 0x33, 0x75, 0x5d, 0x3b, // .u_params0_[3u];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x38, 0x32, 0x20, 0x3d, 0x20, // .    let _e82 = 
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x37, // (mix(pow(abs(_e7
	0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x32, 0x2e, // 0), vec3<f32>(2.
	0x32, 0x66, 0x2c, 0x20, 0x32, 0x2e, 0x32, 0x66, 0x2c, 0x20, 0x32, 0x2e, 0x32, 0x66, 0x29, 0x29, // 2f, 2.2f, 2.2f))
	0x2c, 0x20, 0x5f, 0x65, 0x37, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x65, 0x37, // , _e70, vec3(_e7
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x32, 0x66, 0x2c, 0x20, 0x5f, 0x65, // 5)) * pow(2f, _e
	0x38, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, // 80));.    let _e
	0x38, 0x38, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x5f, // 88 = vec4<f32>(_
	0x65, 0x38, 0x32, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x65, 0x36, 0x39, 0x2e, 0x79, 0x2c, 0x20, 0x5f, // e82.x, _e69.y, _
	0x65, 0x36, 0x39, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x65, 0x36, 0x39, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // e69.z, _e69.w);.
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x76, //     let _e94 = v
	0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x5f, 0x65, 0x38, 0x38, 0x2e, 0x78, 0x2c, // ec4<f32>(_e88.x,
	0x20, 0x5f, 0x65, 0x38, 0x32, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x65, 0x38, 0x38, 0x2e, 0x7a, 0x2c, //  _e82.y, _e88.z,
	0x20, 0x5f, 0x65, 0x38, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, //  _e88.w);.    le
	0x74, 0x20, 0x5f, 0x65, 0x31, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x3c, // t _e101 = (vec4<
	0x66, 0x33, 0x32, 0x3e, 0x28, 0x5f, 0x65, 0x39, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x65, 0x39, // f32>(_e94.x, _e9
	0x34, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x65, 0x38, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x65, 0x39, // 4.y, _e82.z, _e9
	0x34, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x65, 0x36, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 4.w) * _e63);.  
	0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x6e, //   let _e104 = un
	0x6e, 0x61, 0x6d, 0x65, 0x64, 0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x5f, // named.u_params1_
	0x5b, 0x30, 0x75, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, // [0u];.    let _e
	0x31, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x75, 0x6e, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x2e, 0x75, 0x5f, // 107 = unnamed.u_
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x5f, 0x5b, 0x31, 0x75, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // params1_[1u];.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x30, 0x34, 0x20, 0x3c, 0x20, 0x30, 0x2e, //   if (_e104 < 0.
	0x35, 0x66, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, // 5f) {.        le
	0x74, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, // t _e129 = clamp(
	0x5f, 0x65, 0x31, 0x30, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, // _e101.xyz, vec3<
	0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x66, 0x2c, 0x20, 0x30, 0x66, 0x2c, 0x20, 0x30, 0x66, 0x29, // f32>(0f, 0f, 0f)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x31, 0x66, 0x2c, 0x20, // , vec3<f32>(1f, 
	0x31, 0x66, 0x2c, 0x20, 0x31, 0x66, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1f, 1f));.      
	0x20, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x62, 0x69, 0x74, 0x63, 0x61, 0x73, 0x74, //   switch bitcast
	0x3c, 0x69, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x75, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // <i32>(0u) {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, //         default:
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x78, 0x20, 0x3c, //    if (_e129.x <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x66, 0x29, 0x20, 0x7b, 0x0a, // = 0.0031308f) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x34, 0x5f, 0x20, 0x3d, 0x20, 0x28, //     phi_684_ = (
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x66, 0x20, 0x2a, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x78, // 12.92f * _e129.x
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //               } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, //            phi_6
	0x38, 0x34, 0x5f, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x66, 0x20, 0x2a, // 84_ = ((1.055f *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, //  pow(_e129.x, 0.
	0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x66, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 41666666f)) - 0.
	0x30, 0x35, 0x35, 0x66, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 055f);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // }.        }.    
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x33, 0x38, 0x20, 0x3d, 0x20, //     let _e138 = 
	0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x34, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // phi_684_;.      
	0x20, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x62, 0x69, 0x74, 0x63, 0x61, 0x73, 0x74, //   switch bitcast
	0x3c, 0x69, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x75, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // <i32>(0u) {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, //         default:
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x79, 0x20, 0x3c, //    if (_e129.y <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x66, 0x29, 0x20, 0x7b, 0x0a, // = 0.0031308f) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x36, 0x5f, 0x20, 0x3d, 0x20, 0x28, //     phi_686_ = (
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x66, 0x20, 0x2a, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x79, // 12.92f * _e129.y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //               } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, //            phi_6
	0x38, 0x36, 0x5f, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x66, 0x20, 0x2a, // 86_ = ((1.055f *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, //  pow(_e129.y, 0.
	0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x66, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 41666666f)) - 0.
	0x30, 0x35, 0x35, 0x66, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 055f);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // }.        }.    
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x34, 0x37, 0x20, 0x3d, 0x20, //     let _e147 = 
	0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x36, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // phi_686_;.      
	0x20, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x62, 0x69, 0x74, 0x63, 0x61, 0x73, 0x74, //   switch bitcast
	0x3c, 0x69, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x75, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // <i32>(0u) {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, //         default:
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x7a, 0x20, 0x3c, //    if (_e129.z <
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x66, 0x29, 0x20, 0x7b, 0x0a, // = 0.0031308f) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x38, 0x5f, 0x20, 0x3d, 0x20, 0x28, //     phi_688_ = (
	0x31, 0x32, 0x2e, 0x39, 0x32, 0x66, 0x20, 0x2a, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x7a, // 12.92f * _e129.z
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //               } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, //            phi_6
	0x38, 0x38, 0x5f, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x66, 0x20, 0x2a, // 88_ = ((1.055f *
	0x20, 0x70, 0x6f, 0x77, 0x28, 0x5f, 0x65, 0x31, 0x32, 0x39, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, //  pow(_e129.z, 0.
	0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x66, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // 41666666f)) - 0.
	0x30, 0x35, 0x35, 0x66, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 055f);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // }.        }.    
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x35, 0x36, 0x20, 0x3d, 0x20, //     let _e156 = 
	0x70, 0x68, 0x69, 0x5f, 0x36, 0x38, 0x38, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // phi_688_;.      
	0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x30, 0x5f, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, //   phi_690_ = vec
	0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x5f, 0x65, 0x31, 0x33, 0x38, 0x2c, 0x20, 0x5f, 0x65, // 3<f32>(_e138, _e
	0x31, 0x34, 0x37, 0x2c, 0x20, 0x5f, 0x65, 0x31, 0x35, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 147, _e156);.   
	0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  } else {.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x30, 0x34, 0x20, 0x3c, 0x20, 0x31, 0x2e, //   if (_e104 < 1.
	0x35, 0x66, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5f) {.          
	0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x31, 0x5f, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x31, //   phi_691_ = _e1
	0x30, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 01.xyz;.        
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // } else {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x32, 0x5f, 0x20, 0x3d, 0x20, //      phi_692_ = 
	0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x66, 0x2c, 0x20, 0x30, 0x66, // vec3<f32>(0f, 0f
	0x2c, 0x20, 0x30, 0x66, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 0f);.         
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x30, 0x34, 0x20, 0x3c, 0x20, 0x32, //    if (_e104 < 2
	0x2e, 0x35, 0x66, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .5f) {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x31, 0x36, //        let _e116
	0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x65, 0x31, 0x30, 0x31, //  = pow(((((_e101
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x78, 0x33, 0x3c, 0x66, 0x33, // .xyz * mat3x3<f3
	0x32, 0x3e, 0x28, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x2e, 0x34, // 2>(vec3<f32>(0.4
	0x31, 0x32, 0x35, 0x35, 0x36, 0x34, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, // 125564f, 0.35757
	0x36, 0x31, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x66, 0x29, // 61f, 0.1804375f)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x2e, 0x32, 0x31, // , vec3<f32>(0.21
	0x32, 0x36, 0x37, 0x32, 0x39, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, // 26729f, 0.715152
	0x32, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x66, 0x29, 0x2c, 0x20, // 2f, 0.072175f), 
	0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, // vec3<f32>(0.0193
	0x33, 0x33, 0x39, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x66, 0x2c, // 339f, 0.119192f,
	0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x66, 0x29, 0x29, 0x29, 0x20, 0x2a, //  0.9503041f))) *
	0x20, 0x6d, 0x61, 0x74, 0x33, 0x78, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x76, 0x65, 0x63, //  mat3x3<f32>(vec
	0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x31, 0x2e, 0x37, 0x31, 0x36, 0x36, 0x35, 0x31, 0x32, // 3<f32>(1.7166512
	0x66, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x35, 0x35, 0x36, 0x37, 0x30, 0x38, 0x66, 0x2c, 0x20, // f, -0.3556708f, 
	0x2d, 0x30, 0x2e, 0x32, 0x35, 0x33, 0x33, 0x36, 0x36, 0x33, 0x66, 0x29, 0x2c, 0x20, 0x76, 0x65, // -0.2533663f), ve
	0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x2d, 0x30, 0x2e, 0x36, 0x36, 0x36, 0x36, 0x38, // c3<f32>(-0.66668
	0x34, 0x34, 0x66, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x31, 0x36, 0x34, 0x38, 0x31, 0x32, 0x66, 0x2c, // 44f, 1.6164812f,
	0x20, 0x30, 0x2e, 0x30, 0x31, 0x35, 0x37, 0x36, 0x38, 0x35, 0x66, 0x29, 0x2c, 0x20, 0x76, 0x65, //  0.0157685f), ve
	0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x37, 0x36, 0x33, 0x39, // c3<f32>(0.017639
	0x39, 0x66, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x32, 0x37, 0x37, 0x30, 0x36, 0x66, 0x2c, // 9f, -0.0427706f,
	0x20, 0x30, 0x2e, 0x39, 0x34, 0x32, 0x31, 0x30, 0x33, 0x31, 0x66, 0x29, 0x29, 0x29, 0x20, 0x2a, //  0.9421031f))) *
	0x20, 0x5f, 0x65, 0x31, 0x30, 0x37, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x31, //  _e107) * 0.0001
	0x66, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x30, 0x2e, // f), vec3<f32>(0.
	0x31, 0x35, 0x39, 0x33, 0x30, 0x31, 0x37, 0x36, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x39, // 15930176f, 0.159
	0x33, 0x30, 0x31, 0x37, 0x36, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x39, 0x33, 0x30, 0x31, // 30176f, 0.159301
	0x37, 0x36, 0x66, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 76f));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x32, 0x5f, 0x20, //        phi_692_ 
	0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x28, 0x28, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, // = pow(((vec3<f32
	0x3e, 0x28, 0x30, 0x2e, 0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x66, 0x2c, 0x20, 0x30, 0x2e, // >(0.8359375f, 0.
	0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x66, 0x2c, 0x20, 0x30, 0x2e, 0x38, 0x33, 0x35, 0x39, // 8359375f, 0.8359
	0x33, 0x37, 0x35, 0x66, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x31, 0x36, 0x20, 0x2a, // 375f) + (_e116 *
	0x20, 0x31, 0x38, 0x2e, 0x38, 0x35, 0x31, 0x35, 0x36, 0x33, 0x66, 0x29, 0x29, 0x20, 0x2f, 0x20, //  18.851563f)) / 
	0x28, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x31, 0x66, 0x2c, 0x20, 0x31, // (vec3<f32>(1f, 1
	0x66, 0x2c, 0x20, 0x31, 0x66, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x65, 0x31, 0x31, 0x36, 0x20, // f, 1f) + (_e116 
	0x2a, 0x20, 0x31, 0x38, 0x2e, 0x36, 0x38, 0x37, 0x35, 0x66, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x76, // * 18.6875f))), v
	0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x37, 0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, // ec3<f32>(78.8437
	0x35, 0x66, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x66, 0x2c, 0x20, 0x37, // 5f, 78.84375f, 7
	0x38, 0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x66, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 8.84375f));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x34, 0x20, //       let _e124 
	0x3d, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x32, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // = phi_692_;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x31, 0x5f, //         phi_691_
	0x20, 0x3d, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _e124;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, //   }.        let 
	0x5f, 0x65, 0x31, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x31, 0x5f, // _e127 = phi_691_
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, // ;.        phi_69
	0x30, 0x5f, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x31, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0_ = _e127;.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x31, 0x35, 0x39, 0x20, // }.    let _e159 
	0x3d, 0x20, 0x70, 0x68, 0x69, 0x5f, 0x36, 0x39, 0x30, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // = phi_690_;.    
	0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x5f, 0x20, // bgfx_FragData0_ 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x28, 0x5f, 0x65, 0x31, 0x35, // = vec4<f32>(_e15
	0x39, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x65, 0x31, 0x35, 0x39, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x65, // 9.x, _e159.y, _e
	0x31, 0x35, 0x39, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x65, 0x31, 0x30, 0x31, 0x2e, 0x77, 0x29, 0x3b, // 159.z, _e101.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, // .    return;.}..
	0x40, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x0a, 0x66, 0x6e, 0x20, 0x6d, 0x61, // @fragment .fn ma
	0x69, 0x6e, 0x28, 0x40, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x30, 0x29, 0x20, // in(@location(0) 
	0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x5f, 0x3a, 0x20, 0x76, 0x65, 0x63, 0x34, 0x3c, // v_color0_: vec4<
	0x66, 0x33, 0x32, 0x3e, 0x2c, 0x20, 0x40, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x28, // f32>, @location(
	0x31, 0x29, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x5f, 0x3a, // 1) v_texcoord0_:
	0x20, 0x76, 0x65, 0x63, 0x33, 0x3c, 0x66, 0x33, 0x32, 0x3e, 0x29, 0x20, 0x2d, 0x3e, 0x20, 0x40, //  vec3<f32>) -> @
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x30, 0x29, 0x20, 0x76, 0x65, 0x63, 0x34, // location(0) vec4
	0x3c, 0x66, 0x33, 0x32, 0x3e, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x5f, 0x63, 0x6f, // <f32> {.    v_co
	0x6c, 0x6f, 0x72, 0x30, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // lor0_1 = v_color
	0x30, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // 0_;.    v_texcoo
	0x72, 0x64, 0x30, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // rd0_1 = v_texcoo
	0x72, 0x64, 0x30, 0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x31, // rd0_;.    main_1
	0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x65, 0x74, 0x20, 0x5f, 0x65, 0x35, 0x20, // ();.    let _e5 
	0x3d, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // = bgfx_FragData0
	0x5f, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, // _;.    return _e
	0x35, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x0a,                   // 5;.}.......P.
};
static const uint8_t fs_texture_dx11[1796] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x09, 0x75, // FSH............u
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // _params0........
	0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x12, 0x00, 0x10, 0x00, // ...u_params1....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, // .......s_texColo
	0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x5f, 0x74, 0x65, // r0..........s_te
	0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // xColor0.........
	0x9c, 0x06, 0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x4f, 0xe2, 0x4c, 0xcb, 0xf2, 0x57, 0x0d, 0x89, // ....DXBCO.L..W..
	0x4f, 0xdc, 0x8c, 0xbf, 0x27, 0x3d, 0xdf, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x9c, 0x06, 0x00, 0x00, // O...'=.m........
	0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, // ....,...........
	0x49, 0x53, 0x47, 0x4e, 0x6c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // ISGNl...........
	0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // P...............
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, // ................
	0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // b...............
	0x02, 0x00, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, // ........SV_POSIT
	0x49, 0x4f, 0x4e, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, // ION.COLOR.TEXCOO
	0x52, 0x44, 0x00, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // RD..OSGN,.......
	0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .... ...........
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, // ............SV_T
	0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0xab, 0xab, 0x53, 0x48, 0x45, 0x58, 0xc0, 0x05, 0x00, 0x00, // ARGET...SHEX....
	0x50, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, 0x00, 0x04, // P...p...j...Y...
	0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, // F. .........Z...
	0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, // .`......X....p..
	0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, // ....UU..b.......
	0x01, 0x00, 0x00, 0x00, 0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....b...2.......
	0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, // e.... ......h...
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8e, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, // ....H.......CU..
	0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // F~.......`......
	0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x06, // .. ........./...
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, // r.......F.......
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x0c, 0x40, // F........@.....@
	0xcd, 0xcc, 0x0c, 0x40, 0xcd, 0xcc, 0x0c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, // ...@...@........
	0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // r.......F.......
	0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....F...A.......
	0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa6, 0x8a, 0x20, 0x00, // 2...r......... .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, // F...............
	0x01, 0x00, 0x00, 0x00, 0x3a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....:. .........
	0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, // 8...r...........
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, // ....F.......8...
	0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ........F.......
	0x46, 0x1e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, // F.......1.......
	0x01, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ...... .........
	0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, // .@.....?........
	0x01, 0x00, 0x00, 0x00, 0x36, 0x20, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....6 ..r.......
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F...........r...
	0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x1c, 0x2e, 0x4d, 0x3b, // .....@....M;..M;
	0x1c, 0x2e, 0x4d, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ..M;....F.......
	0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 8...r.......F...
	0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x52, 0xb8, 0x4e, 0x41, 0x52, 0xb8, 0x4e, 0x41, // .....@..R.NAR.NA
	0x52, 0xb8, 0x4e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, // R.NA..../...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, // ....F.......8...
	0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, 0x55, 0x55, 0xd5, 0x3e, // .@..UU.>UU.>UU.>
	0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, // ........r.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, 0x72, 0x00, 0x10, 0x00, // F.......2...r...
	0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x3d, 0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x3d, 0x0a, 0x87, 0x3f, 0x00, 0x00, 0x00, 0x00, // =..?=..?=..?....
	0x02, 0x40, 0x00, 0x00, 0xae, 0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, 0xae, 0x47, 0x61, 0xbd, // .@...Ga..Ga..Ga.
	0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ....7...r.......
	0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // F.......F.......
	0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x0b, // F...........1...
	0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // 2......... .....
	0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0x20, 0x40, // .....@.....?.. @
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x98, 0x3a, 0xd3, 0x3e, 0x37, 0x14, 0xb7, 0x3e, // .....@...:.>7..>
	0x9c, 0xc4, 0x38, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ..8>....F.......
	0x10, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ...."........@..
	0xed, 0xc6, 0x59, 0x3e, 0x37, 0x14, 0x37, 0x3f, 0x7d, 0xd0, 0x93, 0x3d, 0x00, 0x00, 0x00, 0x00, // ..Y>7.7?}..=....
	0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, // F...........B...
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x21, 0x62, 0x9e, 0x3c, 0xef, 0x1a, 0xf4, 0x3d, // .....@..!b.<...=
	0x21, 0x47, 0x73, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // !Gs?....F.......
	0x10, 0x00, 0x00, 0x0a, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // .............@..
	0x3a, 0xbb, 0xdb, 0x3f, 0x7c, 0x1a, 0xb6, 0xbe, 0x3a, 0xb9, 0x81, 0xbe, 0x00, 0x00, 0x00, 0x00, // :..?|...:.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0a, 0x22, 0x00, 0x10, 0x00, // F..........."...
	0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xd4, 0xab, 0x2a, 0xbf, 0xdb, 0xe8, 0xce, 0x3f, // .....@....*....?
	0xf1, 0x2c, 0x81, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // .,.<....F.......
	0x10, 0x00, 0x00, 0x0a, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....B........@..
	0x8d, 0x81, 0x90, 0x3c, 0x3a, 0x30, 0x2f, 0xbd, 0xab, 0x2d, 0x71, 0x3f, 0x00, 0x00, 0x00, 0x00, // ...<:0/..-q?....
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, // ....F.......V. .
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // ........8...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x17, 0xb7, 0xd1, 0x38, 0x17, 0xb7, 0xd1, 0x38, 0x17, 0xb7, 0xd1, 0x38, 0x00, 0x00, 0x00, 0x00, // ...8...8...8....
	0x2f, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // /...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ....8...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x20, 0x23, 0x3e, // F........@... #>
	0x00, 0x20, 0x23, 0x3e, 0x00, 0x20, 0x23, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x05, // . #>. #>........
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x32, 0x00, 0x00, 0x0f, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // 2...r.......F...
	0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0xd0, 0x96, 0x41, 0x00, 0xd0, 0x96, 0x41, // .....@.....A...A
	0x00, 0xd0, 0x96, 0x41, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x56, 0x3f, // ...A.....@....V?
	0x00, 0x00, 0x56, 0x3f, 0x00, 0x00, 0x56, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0f, // ..V?..V?....2...
	0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // r.......F.......
	0x02, 0x40, 0x00, 0x00, 0x00, 0x80, 0x95, 0x41, 0x00, 0x80, 0x95, 0x41, 0x00, 0x80, 0x95, 0x41, // .@.....A...A...A
	0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, // .....@.....?...?
	0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, // ...?........r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....F.......F...
	0x02, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // ..../...r.......
	0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, // F.......8...r...
	0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, // ....F........@..
	0x00, 0xb0, 0x9d, 0x42, 0x00, 0xb0, 0x9d, 0x42, 0x00, 0xb0, 0x9d, 0x42, 0x00, 0x00, 0x00, 0x00, // ...B...B...B....
	0x19, 0x00, 0x00, 0x05, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, // ....r.......F...
	0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, // V...............
	0x37, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, // 7...r...........
	0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, // ....F...........
	0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, // ........6.... ..
	0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, // ....F.......>...
	0x00, 0x00, 0x20, 0x00,                                                                         // .. .
};
static const uint8_t fs_texture_mtl[4045] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x75, // FSH............u
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // _params0........
	0x00, 0x00, 0x11, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, // ...s_texColorSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, // pler...........s
	0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // _texColorTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x70, 0x61, 0x72, // ...........u_par
	0x61, 0x6d, 0x73, 0x31, 0x12, 0x01, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x73, // ams1...........s
	0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _texColor.......
	0x00, 0x00, 0x00, 0x42, 0x0f, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, // ...B...#include 
	0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, // <metal_stdlib>.#
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, // include <simd/si
	0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, // md.h>..using nam
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, // espace metal;..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, // truct _Global.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, //     float4 u_par
	0x61, 0x6d, 0x73, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ams0;.    float4
	0x20, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, //  u_params1;.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, //  float4 v_color0
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x74, // ;.    float3 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, // locn1)]];.};..fr
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // agment xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // in_out xlatMtlMa
	0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, // in(xlatMtlMain_i
	0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, // n in [[stage_in]
	0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, // ], constant _Glo
	0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, // bal& _mtl_u [[bu
	0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ffer(0)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, // re2d<float> s_te
	0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // xColor [[texture
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, // (0)]], sampler s
	0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _texColorSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(0)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x34, 0x35, 0x33, // .    float4 _453
	0x20, 0x3d, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x73, 0x61, //  = s_texColor.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, // mple(s_texColorS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // ampler, in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, // coord0.xy, level
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, // (_mtl_u.u_params
	0x30, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 0.x));.    float
	0x33, 0x20, 0x5f, 0x34, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x35, 0x33, 0x2e, 0x78, 0x79, // 3 _423 = _453.xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, // z;.    float3 _4
	0x37, 0x32, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x61, 0x62, // 72 = mix(powr(ab
	0x73, 0x28, 0x5f, 0x34, 0x32, 0x33, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // s(_423), float3(
	0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, // 2.20000004768371
	0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x34, 0x32, 0x33, // 58203125)), _423
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , float3(_mtl_u.
	0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, // u_params0.z)) * 
	0x70, 0x6f, 0x77, 0x72, 0x28, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // powr(2.0, _mtl_u
	0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x30, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // .u_params0.w);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x37, 0x35, 0x20, 0x3d, //    float4 _675 =
	0x20, 0x5f, 0x34, 0x35, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x37, 0x35, 0x2e, //  _453;.    _675.
	0x78, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x37, 0x32, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // x = _472.x;.    
	0x5f, 0x36, 0x37, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x37, 0x32, 0x2e, 0x79, 0x3b, // _675.y = _472.y;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x37, 0x35, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x34, // .    _675.z = _4
	0x37, 0x32, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 72.z;.    float4
	0x20, 0x5f, 0x34, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x69, //  _433 = _675 * i
	0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // n.v_color0;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float3 _703;.   
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x70, 0x61, //  if (_mtl_u.u_pa
	0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x0a, 0x20, // rams1.x < 0.5). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    {.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at3 _507 = fast:
	0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x5f, 0x34, 0x33, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // :clamp(_433.xyz,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, //  float3(0.0), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3(1.0));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x20, 0x3d, //     float _548 =
	0x20, 0x5f, 0x35, 0x30, 0x37, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _507.x;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  float _697;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // {.            if
	0x20, 0x28, 0x5f, 0x35, 0x34, 0x38, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, //  (_548 <= 0.0031
	0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, // 3080009073019027
	0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7099609375).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x39, 0x37, 0x20, 0x3d, //           _697 =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, //  12.920000076293
	0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x3b, 0x0a, // 9453125 * _548;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, //     _697 = (1.05
	0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, // 4999947547912597
	0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x35, 0x34, // 65625 * powr(_54
	0x38, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, // 8, 0.41666665673
	0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, // 25592041015625))
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, //  - 0.05499999970
	0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, // 1976776123046875
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, // und.        } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x35, 0x32, 0x20, 0x3d, //     float _552 =
	0x20, 0x5f, 0x35, 0x30, 0x37, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _507.y;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x39, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  float _699;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // {.            if
	0x20, 0x28, 0x5f, 0x35, 0x35, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, //  (_552 <= 0.0031
	0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, // 3080009073019027
	0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7099609375).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x39, 0x39, 0x20, 0x3d, //           _699 =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, //  12.920000076293
	0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x35, 0x32, 0x3b, 0x0a, // 9453125 * _552;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, //     _699 = (1.05
	0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, // 4999947547912597
	0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x35, 0x35, // 65625 * powr(_55
	0x32, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, // 2, 0.41666665673
	0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, // 25592041015625))
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, //  - 0.05499999970
	0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, // 1976776123046875
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, // und.        } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x35, 0x36, 0x20, 0x3d, //     float _556 =
	0x20, 0x5f, 0x35, 0x30, 0x37, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _507.z;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x30, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  float _701;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // {.            if
	0x20, 0x28, 0x5f, 0x35, 0x35, 0x36, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, //  (_556 <= 0.0031
	0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x39, 0x30, 0x37, 0x33, 0x30, 0x31, 0x39, 0x30, 0x32, 0x37, // 3080009073019027
	0x37, 0x30, 0x39, 0x39, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7099609375).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x31, 0x20, 0x3d, //           _701 =
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x36, 0x32, 0x39, 0x33, //  12.920000076293
	0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x35, 0x36, 0x3b, 0x0a, // 9453125 * _556;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // break;.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x35, //     _701 = (1.05
	0x34, 0x39, 0x39, 0x39, 0x39, 0x34, 0x37, 0x35, 0x34, 0x37, 0x39, 0x31, 0x32, 0x35, 0x39, 0x37, // 4999947547912597
	0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x35, 0x35, // 65625 * powr(_55
	0x36, 0x2c, 0x20, 0x30, 0x2e, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x35, 0x36, 0x37, 0x33, // 6, 0.41666665673
	0x32, 0x35, 0x35, 0x39, 0x32, 0x30, 0x34, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, // 25592041015625))
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x30, //  - 0.05499999970
	0x31, 0x39, 0x37, 0x36, 0x37, 0x37, 0x36, 0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, // 1976776123046875
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, // und.        } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //     _703 = float
	0x33, 0x28, 0x5f, 0x36, 0x39, 0x37, 0x2c, 0x20, 0x5f, 0x36, 0x39, 0x39, 0x2c, 0x20, 0x5f, 0x37, // 3(_697, _699, _7
	0x30, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, // 01);.    }.    e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x3b, 0x0a, 0x20, //   float3 _704;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, //        if (_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, 0x3c, 0x20, // u.u_params1.x < 
	0x31, 0x2e, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 1.5).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x20, //            _704 
	0x3d, 0x20, 0x5f, 0x34, 0x33, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // = _433.xyz;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //     }.        el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // se.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x37, 0x30, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _705;.          
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x70, //   if (_mtl_u.u_p
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x32, 0x2e, 0x35, 0x29, 0x0a, // arams1.x < 2.5).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, // oat3 _641 = powr
	0x28, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x33, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x66, // ((((_433.xyz * f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // loat3x3(float3(0
	0x2e, 0x34, 0x31, 0x32, 0x35, 0x35, 0x36, 0x34, 0x30, 0x39, 0x38, 0x33, 0x35, 0x38, 0x31, 0x35, // .412556409835815
	0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, // 4296875, 0.35757
	0x36, 0x31, 0x30, 0x32, 0x30, 0x31, 0x38, 0x33, 0x35, 0x36, 0x33, 0x32, 0x33, 0x32, 0x34, 0x32, // 6102018356323242
	0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x30, // 1875, 0.18043750
	0x35, 0x32, 0x34, 0x35, 0x32, 0x30, 0x38, 0x37, 0x34, 0x30, 0x32, 0x33, 0x34, 0x33, 0x37, 0x35, // 5245208740234375
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, // ), float3(0.2126
	0x37, 0x32, 0x39, 0x30, 0x34, 0x31, 0x33, 0x33, 0x37, 0x39, 0x36, 0x36, 0x39, 0x31, 0x38, 0x39, // 7290413379669189
	0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, // 453125, 0.715152
	0x32, 0x30, 0x34, 0x30, 0x33, 0x36, 0x37, 0x31, 0x32, 0x36, 0x34, 0x36, 0x34, 0x38, 0x34, 0x33, // 2040367126464843
	0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x30, 0x33, 0x35, // 75, 0.0721750035
	0x38, 0x38, 0x31, 0x39, 0x39, 0x36, 0x31, 0x35, 0x34, 0x37, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, // 8819961547851562
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, // 5), float3(0.019
	0x33, 0x33, 0x33, 0x39, 0x30, 0x30, 0x38, 0x38, 0x33, 0x37, 0x39, 0x33, 0x38, 0x33, 0x30, 0x38, // 3339008837938308
	0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, // 7158203125, 0.11
	0x39, 0x31, 0x39, 0x31, 0x39, 0x39, 0x36, 0x37, 0x35, 0x33, 0x32, 0x31, 0x35, 0x37, 0x38, 0x39, // 9191996753215789
	0x37, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, // 794921875, 0.950
	0x33, 0x30, 0x34, 0x30, 0x39, 0x30, 0x39, 0x37, 0x36, 0x37, 0x31, 0x35, 0x30, 0x38, 0x37, 0x38, // 3040909767150878
	0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 90625))) * float
	0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x37, 0x31, 0x36, // 3x3(float3(1.716
	0x36, 0x35, 0x31, 0x32, 0x30, 0x31, 0x32, 0x34, 0x38, 0x31, 0x36, 0x38, 0x39, 0x34, 0x35, 0x33, // 6512012481689453
	0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x35, 0x35, 0x36, 0x37, 0x30, 0x38, 0x30, // 125, -0.35567080
	0x39, 0x37, 0x34, 0x35, 0x37, 0x38, 0x38, 0x35, 0x37, 0x34, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, // 974578857421875,
	0x20, 0x2d, 0x30, 0x2e, 0x32, 0x35, 0x33, 0x33, 0x36, 0x36, 0x32, 0x39, 0x31, 0x35, 0x32, 0x32, //  -0.253366291522
	0x39, 0x37, 0x39, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, // 979736328125), f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x36, 0x36, 0x36, 0x36, 0x38, 0x34, 0x33, // loat3(-0.6666843
	0x38, 0x39, 0x31, 0x31, 0x34, 0x33, 0x37, 0x39, 0x38, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, // 891143798828125,
	0x20, 0x31, 0x2e, 0x36, 0x31, 0x36, 0x34, 0x38, 0x31, 0x31, 0x38, 0x34, 0x39, 0x35, 0x39, 0x34, //  1.6164811849594
	0x31, 0x31, 0x36, 0x32, 0x31, 0x30, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x31, // 1162109375, 0.01
	0x35, 0x37, 0x36, 0x38, 0x35, 0x30, 0x30, 0x30, 0x34, 0x34, 0x39, 0x34, 0x31, 0x39, 0x30, 0x32, // 5768500044941902
	0x31, 0x36, 0x30, 0x36, 0x34, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, // 16064453125), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x37, 0x36, 0x33, 0x39, 0x38, 0x39, 0x39, // oat3(0.017639899
	0x36, 0x32, 0x36, 0x33, 0x37, 0x34, 0x32, 0x34, 0x34, 0x36, 0x38, 0x39, 0x39, 0x34, 0x31, 0x34, // 6263742446899414
	0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x30, 0x34, 0x32, 0x37, 0x37, 0x30, 0x36, // 0625, -0.0427706
	0x30, 0x31, 0x38, 0x30, 0x39, 0x30, 0x32, 0x34, 0x38, 0x31, 0x30, 0x37, 0x39, 0x31, 0x30, 0x31, // 0180902481079101
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x34, 0x32, 0x31, 0x30, 0x33, 0x30, 0x38, // 5625, 0.94210308
	0x37, 0x39, 0x30, 0x32, 0x30, 0x36, 0x39, 0x30, 0x39, 0x31, 0x37, 0x39, 0x36, 0x38, 0x37, 0x35, // 7902069091796875
	0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x70, // ))) * _mtl_u.u_p
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x31, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x39, 0x2e, 0x39, 0x39, // arams1.y) * 9.99
	0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, // 9999747378751635
	0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, // 5514526367188e-0
	0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x31, 0x35, 0x39, 0x33, // 5, float3(0.1593
	0x30, 0x31, 0x37, 0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 017578125));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, //              _70
	0x35, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 5 = powr((float3
	0x28, 0x30, 0x2e, 0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, // (0.8359375) + (_
	0x36, 0x34, 0x31, 0x20, 0x2a, 0x20, 0x31, 0x38, 0x2e, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, // 641 * 18.8515625
	0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, // )) / (float3(1.0
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x36, 0x34, 0x31, 0x20, 0x2a, 0x20, 0x31, 0x38, 0x2e, 0x36, // ) + (_641 * 18.6
	0x38, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x37, 0x38, // 875)), float3(78
	0x2e, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .84375));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, //        _705 = fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // oat3(0.0);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x30, 0x35, //      _704 = _705
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x30, 0x34, 0x3b, //     _703 = _704;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, // .    }.    out.b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, // gfx_FragData0 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x37, 0x30, 0x33, 0x2c, 0x20, 0x5f, 0x34, 0x33, // float4(_703, _43
	0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 3.w);.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x40, 0x00,                   //  out;.}....@.
};
extern const uint8_t* fs_texture_pssl;
extern const uint32_t fs_texture_pssl_size;
